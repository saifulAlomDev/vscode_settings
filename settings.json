====================================================================
====================================================================


====================================================================
javascript
====================================================================
{
	"Print to console": {
		"prefix": "clg",
		"body": [
			"console.log($1)"
		],
		"description": "Log output to console"
	},
	"While Loop": {
		"prefix": "while",
		"body": [
			"while (${1:condition}) {",
			"    ${2:console.log('Looping');}",
			"}"
		],
		"description": "Creates a while loop"
	},
	"Require Statement": {
		"prefix": "rqr",
		"body": [
			"const ${2:ComponentName} = require('${1:ComponentName}');"
		],
		"description": "Require a module"
	},
	"Module Exports": {
		"prefix": "mexp",
		"body": [
			"module.exports = $1;"
		],
		"description": "Export a module"
	},
	"universal_response": {
		"prefix": "cmt",
		"body": [
			"/*=====================================",
			"${1:Oops, not found}",
			"=======================================*/",
		],
		"description": "Comment"
	},

		"backEnd": {
		  "prefix": "backendproject",
		  "body": [
			"const express = require('express');",
			"const cors = require('cors');",
			"const dotenv = require('dotenv');",
			"const helmet = require('helmet'); // Security middleware",
			"",
			"dotenv.config();",
			"",
			"const app = express();",
			"",
			"// Apply security middleware",
			"app.use(helmet());",
			"",
			"// CORS setup",
			"app.use(cors({ origin: 'https://yourfrontenddomain.com' }));",
			"",
			"// Middleware to parse JSON and URL-encoded data",
			"app.use(express.json());",
			"app.use(express.urlencoded({ extended: true }));",
			"",
			"// Add routes, database connection, etc.",
			"// app.use('/api/v1.0.0/users', userRouter);",
			"",
			"// Default 404 route",
			"app.use('*', (_, res) => res.status(404).json({ message: 'Not Found' }));",
			"",
			"// Server setup",
			"const port = process.env.PORT || 5000;",
			"app.listen(port, () => {",
			"  console.log(`Server is running on http://localhost:${port}`);",
			"});"
		  ],
		  "description": "Backend project setup with express, cors, dotenv, and helmet"
		}
	  
	  
}


====================================================================
settings
====================================================================

{
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.CustomBrowser": "chrome",

  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": true,

  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "git.autofetch": true,
  "code-runner.runInTerminal": true,

  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "terminal.integrated.profiles.windows": {
    "Git Bash": {
      "path": ["C:\\Program Files\\Git\\bin\\bash.exe"]
    }
  },

  "editor.suggest.showWords": false,
  "github.copilot.enable": {
    "*": false
  },
  "workbench.colorTheme": "Default Dark+",
  "window.menuBarVisibility": "compact",
  "files.autoSave": "afterDelay",
  "[snippets]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  }
}




====================================================================
====================================================================

